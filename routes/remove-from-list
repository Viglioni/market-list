require('dotenv').config()
const {connectDB, queryFunctions} = require('../database')
const {map, pathOr, all} = require('ramda')
const {checkExistance} = require('../database/helpers')

const DBName = process.env.DB_NAME

const removeFromList = async (req, res) =>{
    const checkQuery = (param) => pathOr(null, ['body',param], req)
    const parameters = map(
        param => checkQuery(param),
        ["list", "item"])
    const [list, item] = parameters

    if(all(Boolean)(parameters)){
        const {database, close, collection, colFunctions} = await connectDB(DBName)
        const {getCollections} = colFunctions()
        const {remove} = queryFunctions(collection(list))
        
        if(checkExistance(getCollections, col=> col.name)(list)){
            await remove({name: item})
                .then(()=> res.status(200).send("Item removed"))
                .catch(err => res.send("An error has occured, the item was not added.\n"))
        }
        else res.status(400).send("This list does not exist.")
        close()
    }
    else{ res.status(400).send("'list' or 'item' is not informed in body.") }
}

module.exports = removeFromList
